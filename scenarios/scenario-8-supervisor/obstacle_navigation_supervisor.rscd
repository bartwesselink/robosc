robot ObstacleNavigationSupervisor {
    interface point use PointStamped from geometry_msgs
    interface pose use PoseWithCovarianceStamped from geometry_msgs
    interface navigate use NavigateToPose from nav2_msgs

    datatype object Quaternion {
        x: double
        y: double
        z: double
        w: double
    }

    datatype object Point {
        x: double
        y: double
        z: double
    }

    datatype object Pose {
        position: Point
        orientation: Quaternion
    }

    datatype object PoseStamped {
        pose: Pose
    }

    datatype object PointStamped {
    	point: Point
    }

    datatype object NavigateToPoseRequest {
        pose: PoseStamped
    }

    component Nav2 {
    	outgoing message point with identifier: "/clicked_point", type: PointStamped links point
        outgoing message initial_pose with identifier: "/initialpose", type: Pose links pose
        action navigate with identifier: "/navigate_to_pose", request: NavigateToPoseRequest, response: none, feedback: none links navigate

    	behaviour {
    		initial state no_initial_pose {
                on response from initial_pose goto awaiting_point
            }

            state awaiting_point {
			    on response from point goto has_point
            }

    		state has_point {    			
       			on response from navigate goto awaiting_point
       			on cancel from navigate goto awaiting_point
    		}
    	}
    }

    component EmergencyStop from EmergencyStopLibrary import EmergencyStop

    requirement navigate needs EmergencyStop.in_service
    requirement navigate needs Nav2.has_point
}
